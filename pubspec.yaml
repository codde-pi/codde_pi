---
name: codde_pi
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.1+2

environment:
  sdk: ">=3.0.0 <4.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # local
  codde_editor:
    git:
      url: git@github.com:codde-pi/codde_editor.git
      ref: refact_code_editor
  codde_backend:
    git:
      url: git@github.com:codde-pi/codde_backend.git
      ref: backend_v1
  controller_widget_api:
    path: packages/controller_widget_api
  flame_socketio:
    path: packages/flame_socketio
  codde_com:
    path: packages/codde_com
  flame_coddecom:
    path: packages/flame_coddecom
  flame_mjpeg:
    path: packages/flame_mjpeg

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

  # types
  path: ^1.8.2
  file_manager: ^1.0.1
  json_serializable: ^6.5.4
  equatable: ^2.0.5
  enum_to_string: ^2.0.1
  glob: ^2.1.1
  freezed: ^2.3.4
  freezed_annotation: ^2.2.0
  json_annotation: ^4.8.1
  xml: ^6.2.2

  # components
  flutter_svg: ^2.0.5
  google_fonts: ^4.0.3
  flutter_treeview: ^1.0.7+1
  file_picker: ^5.3.0
  simple_markdown_editor: ^0.2.0
  flame: ^1.7.2
  flame_svg: ^1.7.4
  flame_tiled: ^1.10.0
  xterm: ^3.6.1-pre
  dartssh2: ^2.8.2
  webview_flutter: ^4.2.2
  patterns_canvas: ^0.4.0

  # from fileX
  mime: ^1.0.3
  intl: ^0.17.0
  mime_type: ^1.0.0
  isolate_handler: ^1.0.2

  # services
  provider: ^6.0.2
  socket_io_client: ^2.0.2
  hive: ^2.2.3
  hive_flutter: ^1.1.0
  bloc: ^8.1.1
  flutter_bloc: ^8.1.2
  flame_bloc: ^1.8.4
  mobx: ^2.2.0
  flutter_mobx: ^2.0.6+5
  mobx_codegen: ^2.3.0
  get_it: ^7.6.0

  # tools
  network_info_plus: ^4.0.1
  arp_scanner: ^1.2.7
  lan_scanner: ^3.5.0
  after_layout: ^1.2.0
  uuid: ^3.0.7
  dart_ping: ^7.0.2
  flutter_pty: ^0.4.0
  flutter_code_editor: ^0.2.9
  carousel_slider: ^4.2.1
  backdrop: ^0.9.1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0
  hive_generator: ^2.0.0
  build_runner: ^2.3.2

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/samples/socketio/
    - assets/samples/executable.py
    - assets/widgets/simple_button/classic/
    - assets/widgets/unknown/classic/
    - assets/images/hatch_background_export.png

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
